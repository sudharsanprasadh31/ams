#spring.datasource.url=durable-melody-349517:us-central1:oneapartment-5253-db
#spring.datasource.username=oneapartment-5253-db
#spring.datasource.password=$'Y|?3_[*,y,qh"s

#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
# Set to the Postgres user you want to connect to; 'postgres' is the default user.
application.url=https://one-apartment.ue.r.appspot.com
spring.datasource.username=oneapartment-5253-db
spring.datasource.password=$'Y|?3_[*,y,qh"s
spring.cloud.gcp.sql.database-name=apartment
spring.cloud.gcp.sql.instance-connection-name=one-apartment:us-central1:oneapartment-5253-db
#spring.datasource.driver-class-name=org.postgresql.Driver
spring.cloud.appId=one-apartment
# Initialize the database since the newly created Cloud SQL database has no tables. The following flag is for Spring Boot 2.
spring.sql.init.mode=always

spring.jpa.hibernate.ddl-auto=
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

server.error.include-message=always

#spring.devtools.restart.enabled = false

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=oneapartmentmanagement@gmail.com
spring.mail.password=vmejrhjqgahkttsz
spring.mail.properties.mail.smtp.ssl.trust = smtp.gmail.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000
